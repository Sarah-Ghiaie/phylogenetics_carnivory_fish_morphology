web_history = search_res$web_history,
rettype = "fasta",
retmode = "text",
retstart = start,
retmax = chunk_size)
fasta_list <- c(fasta_list, fasta_chunk)
}
# Combine all chunks into one string and split into lines
fasta_raw <- paste(fasta_list, collapse = "\n")
fasta_lines <- strsplit(fasta_raw, "\n")[[1]]
# Split into individual sequences
headers_idx <- grep("^>", fasta_lines)
sequences <- lapply(seq_along(headers_idx), function(i) {
start <- headers_idx[i]
end <- ifelse(i < length(headers_idx), headers_idx[i+1] - 1, length(fasta_lines))
list(header = fasta_lines[start],
seq = paste(fasta_lines[(start+1):end], collapse=""))
})
# Extract taxon name from header
for (i in seq_along(sequences)) {
header <- sequences[[i]]$header
taxon_match <- str_match(header, "\\[(.*?)\\]")  # everything inside brackets
sequences[[i]]$taxon <- ifelse(!is.na(taxon_match[,2]), taxon_match[,2], NA)
}
# Deduplicate by taxon
unique_taxa <- !duplicated(sapply(sequences, function(x) x$taxon))
sequences_unique <- sequences[unique_taxa]
sequences_unique <- Filter(function(x) !is.na(x$taxon), sequences_unique)
# Report number of unique taxa
num_taxa <- length(sequences_unique)
message("Found ", num_taxa, " unique taxa for ", gene_symbol)
if (num_taxa < 50) {
warning("Less than 50 unique taxa found for ", gene_symbol, " (", num_taxa, ")")
}
# Write FASTA file
fasta_out <- unlist(lapply(sequences_unique, function(x) {
paste0(x$header, "\n", x$seq)
}))
writeLines(fasta_out, out_file)
message("Saved sequences for ", gene_symbol, " to ", out_file)
}
# Fetch sequences for your genes
fetch_cichlid_gene("bmp4", "BMP4_cichlidae.fasta")
library(rentrez)
library(stringr)
fetch_cichlid_gene <- function(gene_symbol, out_file, db = "nuccore", chunk_size = 50, retmax = 500) {
message("Searching for: ", gene_symbol)
# Build Entrez query
query <- paste0(gene_symbol, "[Gene] AND txid8113[Organism:exp]")
# Search with web history
search_res <- entrez_search(db = db, term = query, retmax = retmax, use_history = TRUE)
if (search_res$count == 0) {
message("No results for ", gene_symbol)
return(NULL)
}
# Fetch sequences in chunks to avoid HTTP 414 error
fasta_list <- c()
for (start in seq(0, search_res$count - 1, by = chunk_size)) {
message("Fetching records ", start + 1, " to ", min(start + chunk_size, search_res$count))
fasta_chunk <- entrez_fetch(db = db,
web_history = search_res$web_history,
rettype = "fasta",
retmode = "text",
retstart = start,
retmax = chunk_size)
fasta_list <- c(fasta_list, fasta_chunk)
}
# Combine all chunks into one string and split into lines
fasta_raw <- paste(fasta_list, collapse = "\n")
fasta_lines <- strsplit(fasta_raw, "\n")[[1]]
# Split into individual sequences
headers_idx <- grep("^>", fasta_lines)
sequences <- lapply(seq_along(headers_idx), function(i) {
start <- headers_idx[i]
end <- ifelse(i < length(headers_idx), headers_idx[i+1] - 1, length(fasta_lines))
list(header = fasta_lines[start],
seq = paste(fasta_lines[(start+1):end], collapse=""))
})
# Extract taxon name from header
for (i in seq_along(sequences)) {
header <- sequences[[i]]$header
taxon_match <- str_match(header, "\\[(.*?)\\]")  # everything inside brackets
sequences[[i]]$taxon <- ifelse(!is.na(taxon_match[,2]), taxon_match[,2], NA)
}
# Deduplicate by taxon
unique_taxa <- !duplicated(sapply(sequences, function(x) x$taxon))
sequences_unique <- sequences[unique_taxa]
sequences_unique <- Filter(function(x) !is.na(x$taxon), sequences_unique)
# Report number of unique taxa
num_taxa <- length(sequences_unique)
message("Found ", num_taxa, " unique taxa for ", gene_symbol)
if (num_taxa < 50) {
warning("Less than 50 unique taxa found for ", gene_symbol, " (", num_taxa, ")")
}
# Write FASTA file
fasta_out <- unlist(lapply(sequences_unique, function(x) {
paste0(x$header, "\n", x$seq)
}))
writeLines(fasta_out, out_file)
message("Saved sequences for ", gene_symbol, " to ", out_file)
}
# Fetch sequences for your genes
fetch_cichlid_gene("bmp4", "BMP4_cichlidae.fasta")
fetch_cichlid_gene("calmodulin", "CALM_cichlidae.fasta")
fetch_cichlid_gene("npy2r", "NPY2R_cichlidae.fasta")
setwd("~/Desktop/Phylogenetics")
# Install and load required packages
if (!requireNamespace("rentrez", quietly = TRUE)) install.packages("rentrez")
if (!requireNamespace("stringr", quietly = TRUE)) install.packages("stringr")
library(rentrez)
library(stringr)
# Function to fetch up to 50 unique taxa for a gene
fetch_gene_taxa <- function(gene_symbol, out_prefix, db = "nuccore", chunk_size = 50, retmax = 1000) {
message("Searching for: ", gene_symbol)
# Build Entrez query
query <- paste0(gene_symbol, "[Gene] AND txid8113[Organism:exp]")
# Search with web history
search_res <- entrez_search(db = db, term = query, retmax = retmax, use_history = TRUE)
if (search_res$count == 0) {
message("No results for ", gene_symbol)
return(NULL)
}
# Fetch sequences in chunks
fasta_list <- c()
for (start in seq(0, min(search_res$count, retmax) - 1, by = chunk_size)) {
fasta_chunk <- entrez_fetch(db = db,
web_history = search_res$web_history,
rettype = "fasta",
retmode = "text",
retstart = start,
retmax = chunk_size)
fasta_list <- c(fasta_list, fasta_chunk)
}
fasta_raw <- paste(fasta_list, collapse = "\n")
fasta_lines <- strsplit(fasta_raw, "\n")[[1]]
# Split into sequences
headers_idx <- grep("^>", fasta_lines)
sequences <- lapply(seq_along(headers_idx), function(i) {
start <- headers_idx[i]
end <- ifelse(i < length(headers_idx), headers_idx[i+1] - 1, length(fasta_lines))
list(header = fasta_lines[start],
seq = paste(fasta_lines[(start+1):end], collapse=""))
})
# Extract accession number and taxon
for (i in seq_along(sequences)) {
header <- sequences[[i]]$header
acc <- str_match(header, ">(\\S+)")[,2]     # accession number
taxon <- str_match(header, "\\[(.*?)\\]")[,2] # text in []
sequences[[i]]$accession <- acc
sequences[[i]]$taxon <- taxon
}
# Deduplicate by taxon
unique_taxa <- !duplicated(sapply(sequences, function(x) x$taxon))
sequences_unique <- sequences[unique_taxa]
sequences_unique <- Filter(function(x) !is.na(x$taxon), sequences_unique)
# Limit to first 50 taxa if more are available
sequences_final <- sequences_unique[1:min(50, length(sequences_unique))]
message("Found ", length(sequences_final), " unique taxa for ", gene_symbol)
# Save FASTA
fasta_out <- unlist(lapply(sequences_final, function(x) {
paste0(">", x$accession, " ", x$taxon, "\n", x$seq)
}))
writeLines(fasta_out, paste0(out_prefix, "_", gene_symbol, ".fasta"))
# Save table (accession, taxon, sequence)
df <- data.frame(
Accession = sapply(sequences_final, function(x) x$accession),
Taxon = sapply(sequences_final, function(x) x$taxon),
Sequence = sapply(sequences_final, function(x) x$seq),
stringsAsFactors = FALSE
)
write.csv(df, paste0(out_prefix, "_", gene_symbol, "_summary.csv"), row.names = FALSE)
return(df)
}
# Run for your genes (change list if needed)
genes_to_fetch <- c("cytochrome b", "ND2", "COI", "RAG1")
results <- lapply(genes_to_fetch, function(g) {
fetch_gene_taxa(g, out_prefix = "Cichlidae")
})
View(fetch_gene_taxa)
# Install and load rentrez if not already installed
if (!requireNamespace("rentrez", quietly = TRUE)) {
install.packages("rentrez")
}
library(rentrez)
# Define queries with synonyms for each gene
gene_queries <- list(
"cytochrome b" = '(cytochrome b[All Fields] OR cytb[All Fields]) AND txid8113[Organism:exp]',
"ND2"          = '(ND2[All Fields] OR "NADH dehydrogenase subunit 2"[All Fields]) AND txid8113[Organism:exp]',
"COI"          = '(COI[All Fields] OR COX1[All Fields] OR "cytochrome oxidase subunit I"[All Fields]) AND txid8113[Organism:exp]',
"RAG1"         = 'RAG1[All Fields] AND txid8113[Organism:exp]'
)
# Function to search, fetch, and save sequences for a gene
fetch_cichlid_gene <- function(gene_symbol, query, out_file, db = "nuccore", retmax = 500) {
message("\nSearching for: ", gene_symbol)
# Search NCBI
search_res <- entrez_search(db = db, term = query, use_history = TRUE, retmax = retmax)
if (length(search_res$ids) == 0) {
message("No results for ", gene_symbol)
return(NULL)
}
# Fetch summaries to get accession + taxon names
summaries <- entrez_summary(db = db, web_history = search_res$web_history, retmax = retmax)
accession <- sapply(summaries, function(x) x$caption)
taxon     <- sapply(summaries, function(x) x$organism)
# Fetch FASTA sequences
fasta <- entrez_fetch(db = db, web_history = search_res$web_history, rettype = "fasta", retmode = "text", retmax = retmax)
# Save FASTA
write(fasta, file = out_file)
message("Saved ", length(accession), " sequences to ", out_file)
# Print accession, taxon, and first part of sequence
cat("\n--- Results for", gene_symbol, "---\n")
for (i in seq_along(accession)) {
cat(accession[i], "-", taxon[i], "\n")
}
return(list(accession = accession, taxon = taxon, fasta = fasta))
}
# Run for all target genes
results <- list()
for (gene in names(gene_queries)) {
out_file <- paste0(gsub(" ", "_", gene), "_cichlidae.fasta")
results[[gene]] <- fetch_cichlid_gene(gene, gene_queries[[gene]], out_file)
}
# Install and load rentrez if not already installed
if (!requireNamespace("rentrez", quietly = TRUE)) {
install.packages("rentrez")
}
library(rentrez)
# Define queries with synonyms for each gene
gene_queries <- list(
"cytochrome b" = '(cytochrome b[All Fields] OR cytb[All Fields]) AND txid8113[Organism:exp]',
"ND2"          = '(ND2[All Fields] OR "NADH dehydrogenase subunit 2"[All Fields]) AND txid8113[Organism:exp]',
"COI"          = '(COI[All Fields] OR COX1[All Fields] OR "cytochrome oxidase subunit I"[All Fields]) AND txid8113[Organism:exp]',
"RAG1"         = 'RAG1[All Fields] AND txid8113[Organism:exp]'
)
# Function to search, fetch, and save sequences for a gene
fetch_cichlid_gene <- function(gene_symbol, query, out_file, db = "nuccore", retmax = 500) {
message("\nSearching for: ", gene_symbol)
# Search NCBI
search_res <- entrez_search(db = db, term = query, use_history = TRUE, retmax = retmax)
if (length(search_res$ids) == 0) {
message("No results for ", gene_symbol)
return(NULL)
}
# Fetch summaries to get accession + taxon names
summaries <- entrez_summary(db = db, web_history = search_res$web_history, retmax = retmax)
accession <- sapply(summaries, function(x) x$caption)
taxon     <- sapply(summaries, function(x) x$organism)
# Fetch FASTA sequences
fasta <- entrez_fetch(db = db, web_history = search_res$web_history, rettype = "fasta", retmode = "text", retmax = retmax)
# Save FASTA
write(fasta, file = out_file)
message("Saved ", length(accession), " sequences to ", out_file)
# Print accession, taxon, and first part of sequence
cat("\n--- Results for", gene_symbol, "---\n")
for (i in seq_along(accession)) {
cat(accession[i], "-", taxon[i], "\n")
}
return(list(accession = accession, taxon = taxon, fasta = fasta))
}
# Run for all target genes
results <- list()
for (gene in names(gene_queries)) {
out_file <- paste0(gsub(" ", "_", gene), "_cichlidae.fasta")
results[[gene]] <- fetch_cichlid_gene(gene, gene_queries[[gene]], out_file)
}
View(results)
View(gene_queries)
View(fetch_cichlid_gene)
# Install and load rentrez if not already installed
if (!requireNamespace("rentrez", quietly = TRUE)) {
install.packages("rentrez")
}
library(rentrez)
# Define queries with synonyms for each gene
gene_queries <- list(
"cytochrome b" = '(cytochrome b[All Fields] OR cytb[All Fields]) AND txid8113[Organism:exp]',
"ND2"          = '(ND2[All Fields] OR "NADH dehydrogenase subunit 2"[All Fields]) AND txid8113[Organism:exp]',
"COI"          = '(COI[All Fields] OR COX1[All Fields] OR "cytochrome oxidase subunit I"[All Fields]) AND txid8113[Organism:exp]',
"RAG1"         = 'RAG1[All Fields] AND txid8113[Organism:exp]'
)
# Function to search, fetch, and save sequences for a gene
fetch_cichlid_gene <- function(gene_symbol, query, out_file, db = "nuccore", retmax = 500) {
message("\nSearching for: ", gene_symbol)
# Search NCBI
search_res <- entrez_search(db = db, term = query, use_history = TRUE, retmax = retmax)
if (length(search_res$ids) == 0) {
message("No results for ", gene_symbol)
return(NULL)
}
# Fetch summaries to get accession + taxon names
summaries <- entrez_summary(db = db, web_history = search_res$web_history, retmax = retmax)
accession <- sapply(summaries, function(x) x$caption)
taxon     <- sapply(summaries, function(x) x$organism)
# Fetch FASTA sequences
fasta <- entrez_fetch(db = db, web_history = search_res$web_history, rettype = "fasta", retmode = "text", retmax = retmax)
# Save FASTA
write(fasta, file = out_file)
message("Saved ", length(accession), " sequences to ", out_file)
# Print accession, taxon, and first part of sequence
cat("\n--- Results for", gene_symbol, "---\n")
for (i in seq_along(accession)) {
cat(accession[i], "-", taxon[i], "\n")
}
return(list(accession = accession, taxon = taxon, fasta = fasta))
}
# Run for all target genes
results <- list()
for (gene in names(gene_queries)) {
out_file <- paste0(gsub(" ", "_", gene), "_cichlidae.fasta")
results[[gene]] <- fetch_cichlid_gene(gene, gene_queries[[gene]], out_file)
}
# Install and load rentrez if not already installed
if (!requireNamespace("rentrez", quietly = TRUE)) {
install.packages("rentrez")
}
library(rentrez)
# Define queries with synonyms for each gene
gene_queries <- list(
"cytochrome b" = '(cytochrome b[All Fields] OR cytb[All Fields]) AND txid8113[Organism:exp]',
"ND2"          = '(ND2[All Fields] OR "NADH dehydrogenase subunit 2"[All Fields]) AND txid8113[Organism:exp]',
"COI"          = '(COI[All Fields] OR COX1[All Fields] OR "cytochrome oxidase subunit I"[All Fields]) AND txid8113[Organism:exp]',
"RAG1"         = 'RAG1[All Fields] AND txid8113[Organism:exp]'
)
# Function to search, fetch, and save sequences for a gene
fetch_cichlid_gene <- function(gene_symbol, query, out_file, db = "nuccore", retmax = 500) {
message("\nSearching for: ", gene_symbol)
# Search NCBI
search_res <- entrez_search(db = db, term = query, use_history = TRUE, retmax = retmax)
if (length(search_res$ids) == 0) {
message("No results for ", gene_symbol)
return(NULL)
}
# Fetch summaries to get accession + taxon names
summaries <- entrez_summary(db = db, web_history = search_res$web_history, retmax = retmax)
accession <- sapply(summaries, function(x) x$caption)
taxon     <- sapply(summaries, function(x) x$organism)
# Fetch FASTA sequences
fasta <- entrez_fetch(db = db, web_history = search_res$web_history, rettype = "fasta", retmode = "text", retmax = retmax)
# Save FASTA
write(fasta, file = out_file)
message("Saved ", length(accession), " sequences to ", out_file)
# Print accession, taxon, and first part of sequence
cat("\n--- Results for", gene_symbol, "---\n")
for (i in seq_along(accession)) {
cat(accession[i], "-", taxon[i], "\n")
}
return(list(accession = accession, taxon = taxon, fasta = fasta))
}
# Run for all target genes
results <- list()
for (gene in names(gene_queries)) {
out_file <- paste0(gsub(" ", "_", gene), "_cichlidae.fasta")
results[[gene]] <- fetch_cichlid_gene(gene, gene_queries[[gene]], out_file)
}
# Install and load rentrez if not already installed
if (!requireNamespace("rentrez", quietly = TRUE)) {
install.packages("rentrez")
}
library(rentrez)
# Define queries with synonyms for each gene
gene_queries <- list(
"cytochrome b" = '(cytochrome b[All Fields] OR cytb[All Fields]) AND txid8113[Organism:exp]',
"ND2"          = '(ND2[All Fields] OR "NADH dehydrogenase subunit 2"[All Fields]) AND txid8113[Organism:exp]',
"COI"          = '(COI[All Fields] OR COX1[All Fields] OR "cytochrome oxidase subunit I"[All Fields]) AND txid8113[Organism:exp]',
"RAG1"         = 'RAG1[All Fields] AND txid8113[Organism:exp]'
)
# Function to search, fetch, and save up to 50 sequences for a gene
fetch_cichlid_gene <- function(gene_symbol, query, out_file, db = "nuccore", retmax = 50) {
message("\nSearching for: ", gene_symbol)
# Search NCBI
search_res <- entrez_search(db = db, term = query, use_history = TRUE, retmax = retmax)
if (length(search_res$ids) == 0) {
message("No results for ", gene_symbol)
return(NULL)
}
# Limit to 50 IDs max
ids <- head(search_res$ids, 50)
# Fetch summaries (accessions + taxa)
summaries <- entrez_summary(db = db, id = ids)
accession <- sapply(summaries, function(x) x$caption)
taxon     <- sapply(summaries, function(x) x$organism)
# Fetch FASTA sequences
fasta <- entrez_fetch(db = db, id = ids, rettype = "fasta", retmode = "text")
# Save FASTA
write(fasta, file = out_file)
message("Saved ", length(accession), " sequences to ", out_file)
# Print accessions + taxa names
cat("\n--- Results for", gene_symbol, "---\n")
for (i in seq_along(accession)) {
cat(accession[i], "-", taxon[i], "\n")
}
return(list(accession = accession, taxon = taxon, fasta = fasta))
}
# Run for all target genes
results <- list()
for (gene in names(gene_queries)) {
out_file <- paste0(gsub(" ", "_", gene), "_cichlidae.fasta")
results[[gene]] <- fetch_cichlid_gene(gene, gene_queries[[gene]], out_file, retmax = 50)
}
message("\nAll sequences downloaded (max 50 per gene).")
# Install and load required packages
if (!requireNamespace("rentrez", quietly = TRUE)) install.packages("rentrez")
if (!requireNamespace("stringr", quietly = TRUE)) install.packages("stringr")
library(rentrez)
library(stringr)
# Define queries with synonyms for each gene
gene_queries <- list(
"cytochrome b" = '(cytochrome b[All Fields] OR cytb[All Fields]) AND txid8113[Organism:exp]',
"ND2"          = '(ND2[All Fields] OR "NADH dehydrogenase subunit 2"[All Fields]) AND txid8113[Organism:exp]',
"COI"          = '(COI[All Fields] OR COX1[All Fields] OR "cytochrome oxidase subunit I"[All Fields]) AND txid8113[Organism:exp]',
"RAG1"         = 'RAG1[All Fields] AND txid8113[Organism:exp]'
)
# Function to fetch up to 50 unique taxa per gene
fetch_unique_taxa <- function(gene_symbol, query, out_file, db = "nuccore", retmax = 500) {
message("\nSearching for: ", gene_symbol)
# Search NCBI
search_res <- entrez_search(db = db, term = query, use_history = TRUE, retmax = retmax)
if (search_res$count == 0) {
message("No results for ", gene_symbol)
return(NULL)
}
# Fetch summaries (accession + taxon)
summaries <- entrez_summary(db = db, web_history = search_res$web_history, retmax = retmax)
accession <- sapply(summaries, function(x) x$caption)
taxon     <- sapply(summaries, function(x) x$organism)
# Deduplicate by taxon
unique_idx <- !duplicated(taxon)
accession <- accession[unique_idx]
taxon <- taxon[unique_idx]
# Limit to 50 unique taxa
if (length(accession) < 50) {
warning("Only ", length(accession), " unique taxa found for ", gene_symbol)
}
accession <- head(accession, 50)
taxon <- head(taxon, 50)
# Fetch FASTA for these accession numbers
fasta <- entrez_fetch(db = db, id = accession, rettype = "fasta", retmode = "text")
# Save FASTA
write(fasta, file = out_file)
message("Saved ", length(accession), " unique taxa sequences to ", out_file)
# Print accession and taxon
cat("\n--- Results for", gene_symbol, "---\n")
for (i in seq_along(accession)) {
cat(accession[i], "-", taxon[i], "\n")
}
return(list(accession = accession, taxon = taxon, fasta = fasta))
}
# Run for all genes
results <- list()
for (gene in names(gene_queries)) {
out_file <- paste0(gsub(" ", "_", gene), "_cichlidae.fasta")
results[[gene]] <- fetch_unique_taxa(gene, gene_queries[[gene]], out_file, retmax = 500)
}
message("\nAll sequences downloaded (up to 50 unique taxa per gene).")
View(results)
View(results)
setwd("~/Desktop/phylogenetics_carnivory_fish_morphology/Dataset_Activity")
# Install and load required packages
if (!requireNamespace("rentrez", quietly = TRUE)) install.packages("rentrez")
if (!requireNamespace("stringr", quietly = TRUE)) install.packages("stringr")
library(rentrez)
library(stringr)
# Define queries with synonyms for each gene
gene_queries <- list(
"cytochrome b" = '(cytochrome b[All Fields] OR cytb[All Fields]) AND txid8113[Organism:exp]',
"ND2"          = '(ND2[All Fields] OR "NADH dehydrogenase subunit 2"[All Fields]) AND txid8113[Organism:exp]',
"COI"          = '(COI[All Fields] OR COX1[All Fields] OR "cytochrome oxidase subunit I"[All Fields]) AND txid8113[Organism:exp]',
"RAG1"         = 'RAG1[All Fields] AND txid8113[Organism:exp]'
)
# Function to fetch up to 50 unique taxa per gene
fetch_unique_taxa <- function(gene_symbol, query, out_file, db = "nuccore", retmax = 500) {
message("\nSearching for: ", gene_symbol)
# Search NCBI
search_res <- entrez_search(db = db, term = query, use_history = TRUE, retmax = retmax)
if (search_res$count == 0) {
message("No results for ", gene_symbol)
return(NULL)
}
# Fetch summaries (accession + taxon)
summaries <- entrez_summary(db = db, web_history = search_res$web_history, retmax = retmax)
accession <- sapply(summaries, function(x) x$caption)
taxon     <- sapply(summaries, function(x) x$organism)
# Deduplicate by taxon
unique_idx <- !duplicated(taxon)
accession <- accession[unique_idx]
taxon <- taxon[unique_idx]
# Limit to 50 unique taxa
if (length(accession) < 50) {
warning("Only ", length(accession), " unique taxa found for ", gene_symbol)
}
accession <- head(accession, 50)
taxon <- head(taxon, 50)
# Fetch FASTA for these accession numbers
fasta <- entrez_fetch(db = db, id = accession, rettype = "fasta", retmode = "text")
# Save FASTA
write(fasta, file = out_file)
message("Saved ", length(accession), " unique taxa sequences to ", out_file)
# Print accession and taxon
cat("\n--- Results for", gene_symbol, "---\n")
for (i in seq_along(accession)) {
cat(accession[i], "-", taxon[i], "\n")
}
return(list(accession = accession, taxon = taxon, fasta = fasta))
}
# Run for all genes
results <- list()
for (gene in names(gene_queries)) {
out_file <- paste0(gsub(" ", "_", gene), "_cichlidae.fasta")
results[[gene]] <- fetch_unique_taxa(gene, gene_queries[[gene]], out_file, retmax = 500)
}
message("\nAll sequences downloaded (up to 50 unique taxa per gene).")
View(results)
